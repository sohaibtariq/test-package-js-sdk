/**
 * Intervengine Application API V1Lib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  lazy,
  object,
  optional,
  Schema,
  string,
  unknown,
} from '../schema';
import { Preferences, preferencesSchema } from './preferences';
import { Status, statusSchema } from './status';

/** A partcipant view model */
export interface Participant {
  id?: string;
  firstName: string;
  lastName: string;
  email: string;
  mobile?: string;
  gender?: string;
  dob?: string;
  participantTags?: unknown[];
  participantExtras?: unknown[];
  participantGroups?: unknown[];
  deviceToken?: string;
  preferences?: Preferences;
  status?: Status;
}

export const participantSchema: Schema<Participant> = object({
  id: ['id', optional(string())],
  firstName: ['firstName', string()],
  lastName: ['lastName', string()],
  email: ['email', string()],
  mobile: ['mobile', optional(string())],
  gender: ['gender', optional(string())],
  dob: ['dob', optional(string())],
  participantTags: ['participantTags', optional(array(unknown()))],
  participantExtras: ['participantExtras', optional(array(unknown()))],
  participantGroups: ['participantGroups', optional(array(unknown()))],
  deviceToken: ['deviceToken', optional(string())],
  preferences: ['preferences', optional(lazy(() => preferencesSchema))],
  status: ['status', optional(lazy(() => statusSchema))],
});
