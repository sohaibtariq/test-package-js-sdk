/**
 * Intervengine Application API V1Lib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  boolean,
  lazy,
  nullable,
  object,
  optional,
  Schema,
  string,
  unknown,
} from '../schema';
import { ContentType, contentTypeSchema } from './contentType';

export interface Result2 {
  id?: string;
  uuid?: string | null;
  publishedVersionId?: string;
  contentTypeId?: string;
  contentType?: ContentType;
  externalReference?: string | null;
  title?: string;
  body?: string;
  description?: string | null;
  contentTags?: unknown[];
  contentGroups?: unknown[];
  uiConfigs?: string | null;
  isActive?: boolean;
  updatedBy?: string;
  updatedAt?: string;
}

export const result2Schema: Schema<Result2> = object({
  id: ['id', optional(string())],
  uuid: ['uuid', optional(nullable(string()))],
  publishedVersionId: ['publishedVersionId', optional(string())],
  contentTypeId: ['contentTypeId', optional(string())],
  contentType: ['contentType', optional(lazy(() => contentTypeSchema))],
  externalReference: ['externalReference', optional(nullable(string()))],
  title: ['title', optional(string())],
  body: ['body', optional(string())],
  description: ['description', optional(nullable(string()))],
  contentTags: ['contentTags', optional(array(unknown()))],
  contentGroups: ['contentGroups', optional(array(unknown()))],
  uiConfigs: ['uiConfigs', optional(nullable(string()))],
  isActive: ['isActive', optional(boolean())],
  updatedBy: ['updatedBy', optional(string())],
  updatedAt: ['updatedAt', optional(string())],
});
