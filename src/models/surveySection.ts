/**
 * Intervengine Application API V1Lib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  boolean,
  lazy,
  number,
  object,
  optional,
  Schema,
  string,
} from '../schema';
import { SurveyQuestion, surveyQuestionSchema } from './surveyQuestion';
import { UiConfigs, uiConfigsSchema } from './uiConfigs';

export interface SurveySection {
  id?: string;
  name: string;
  descriptionShort?: string;
  descriptionLong?: string;
  uiConfigs?: UiConfigs;
  surveyQuestions?: SurveyQuestion[];
  isActive: boolean;
  displayOrder: number;
}

export const surveySectionSchema: Schema<SurveySection> = object({
  id: ['id', optional(string())],
  name: ['name', string()],
  descriptionShort: ['descriptionShort', optional(string())],
  descriptionLong: ['descriptionLong', optional(string())],
  uiConfigs: ['uiConfigs', optional(lazy(() => uiConfigsSchema))],
  surveyQuestions: [
    'surveyQuestions',
    optional(array(lazy(() => surveyQuestionSchema))),
  ],
  isActive: ['isActive', boolean()],
  displayOrder: ['displayOrder', number()],
});
