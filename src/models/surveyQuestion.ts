/**
 * Intervengine Application API V1Lib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  boolean,
  lazy,
  nullable,
  number,
  object,
  optional,
  Schema,
  string,
  unknown,
} from '../schema';
import {
  SurveyResponseOption,
  surveyResponseOptionSchema,
} from './surveyResponseOption';
import { UiConfigs1, uiConfigs1Schema } from './uiConfigs1';

export interface SurveyQuestion {
  id?: string;
  questionText: string;
  descriptionShort?: unknown | null;
  descriptionLong?: unknown | null;
  uiConfigs?: UiConfigs1;
  surveyResponseOptions?: SurveyResponseOption[];
  isActive: boolean;
  isRequired: boolean;
  displayOrder: number;
}

export const surveyQuestionSchema: Schema<SurveyQuestion> = object({
  id: ['id', optional(string())],
  questionText: ['questionText', string()],
  descriptionShort: ['descriptionShort', optional(nullable(unknown()))],
  descriptionLong: ['descriptionLong', optional(nullable(unknown()))],
  uiConfigs: ['uiConfigs', optional(lazy(() => uiConfigs1Schema))],
  surveyResponseOptions: [
    'surveyResponseOptions',
    optional(array(lazy(() => surveyResponseOptionSchema))),
  ],
  isActive: ['isActive', boolean()],
  isRequired: ['isRequired', boolean()],
  displayOrder: ['displayOrder', number()],
});
